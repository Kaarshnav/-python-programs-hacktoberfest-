import sys
import  time
def dp(n,coin):
    li=[0]*(n+1)
    if n==0:
        li[0]=0
    for i in range(1,n+1):
        mincount=sys.maxsize
        for c in coin:
            if i-c>=0:
                count=1+li[i-c]
                mincount=min(mincount,count)
        li[i]=mincount
    return li[n]

def memo_coin(n,coin,dic):
    if (n==0):
        dic[n]=0
        return 0
    if dic.get(n)!=None:
        return dic[n]
    mincount=sys.maxsize
    for i in coin:
        if n-i>=0:
            count=1+memo_coin(n-i,coin,dic)
            if count<mincount:
                mincount=count
    dic[n]=mincount
    return mincount

def rec_coin(n,coin):
    if (n==0):
        return 0
    mincount=sys.maxsize
    for i in coin:
        if n-i>=0:
            count=1+rec_coin(n-i,coin)
            if count<mincount:
                mincount=count
    return mincount
t0=time.time()
print(dp(500,[1,7,10,12,18]))
t1=time.time()
print(t1-t0)
print(memo_coin(500,[1,7,10,12,18],{}))
t2=time.time()
print(t2-t1)
print(rec_coin(80,[1,7,10,12,18]))
t3=time.time()
print(t3-t2)
